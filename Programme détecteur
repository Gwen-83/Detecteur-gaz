/*
    Demo for Aerosafe AMG-détecteur gaz.

    Copyright (c) 2024 Aerosafe.
    Author    : Bruno Anaïs, Drouet Gwénaël, Hommage Maléna
    Created Time : Sep 2023
    La licence Aerosafe
    La licence Aerosafe AMG

    L'autorisation est accordée gratuitement à toute personne obtenant une copie
    de ce logiciel et des fichiers de documentation associés (le « Logiciel »), pour traiter
    dans le Logiciel sans restriction, y compris, sans limitation, les droits
    utiliser, copier, modifier, fusionner, publier, distribuer, sous-licencier et/ou vendre
    copies du Logiciel, et pour permettre aux personnes à qui le Logiciel est
    fourni à cet effet, sous réserve des conditions suivantes :

    L'avis de droit d'auteur ci-dessus et cet avis d'autorisation doivent être inclus dans
    toutes les copies ou parties substantielles du Logiciel.

    LE LOGICIEL EST FOURNI « TEL QUEL », SANS GARANTIE D'AUCUNE SORTE, EXPRESSE OU
    IMPLICITES, Y COMPRIS MAIS SANS LIMITATION LES GARANTIES DE QUALITÉ MARCHANDE,
    APTITUDE À UN USAGE PARTICULIER ET NON-VIOLATION. EN AUCUN CAS LE
    LES AUTEURS OU TITULAIRES DES DROITS D'AUTEUR SONT RESPONSABLES DE TOUTE RÉCLAMATION, DOMMAGES OU AUTRES
    RESPONSABILITÉ, QUE CE SOIT DANS UNE ACTION CONTRACTUELLE, DÉLIT OU AUTRE, DÉCOULANT DE,
    HORS OU EN RELATION AVEC LE LOGICIEL OU L'UTILISATION OU D'AUTRES ACTIVITÉS DANS
    LES LOGICIELS.
*/

#include <SD.h>
#include <rgb_lcd.h>
#include <MQ2.h>
#include <SparkFun_SGP30_Arduino_Library.h>
#include <Wire.h>
#include "Air_Quality_Sensor.h"
#include <Servo.h>
#include <SoftwareSerial.h>

#define rxPin 8
#define txPin 7
SoftwareSerial hc05(rxPin, txPin);

String msg;
rgb_lcd lcd;
SGP30 mySensor;
File myFile;

int MQ7 = 2;
int MQ2 = 3;
int ledR = 4;
int ledB = 5;
int ampli2 = 6;
int bouton = 2;
int chipSelect = 10;
bool programme = false;



void jouerSon() {
  analogWrite(ampli2, 255);
  delay(3000);
  analogWrite(ampli2,0);
}

void ledLow(){
  digitalWrite(ledR, LOW);
  digitalWrite(ledB, LOW);
}



void setup() {
  pinMode(rxPin, INPUT);
  pinMode(txPin, OUTPUT);  
  Serial.begin(9600);
  hc05.begin(9600);

  pinMode(MQ7, INPUT);
  pinMode(MQ2, INPUT);

  pinMode(ledR, OUTPUT);
  pinMode(ledB, OUTPUT);
  pinMode(ampli2, OUTPUT);

  pinMode (chipSelect, OUTPUT);

  lcd.begin(16, 2);
  lcd.setCursor(2, 0);
  lcd.print(F("AeroSafe AMG"));
  lcd.setCursor(6, 1);
  lcd.print(F("v3.08"));
  delay(5000);
  lcd.clear();

  Wire.begin();

  if (mySensor.begin() == false) {
    Serial.println(F("No SGP30 Detected. Check connections."));
    lcd.setCursor(0, 0);
    lcd.print(F("Connection lost"));
    jouerSon();
    delay(1500);
    while (1);
  } else {
    Serial.println(F("SGP30 initialized successfully"));
  }
  mySensor.initAirQuality();

  if (digitalRead(MQ7) == HIGH) {
    Serial.println(F("Le capteur MQ7 est correctement branché."));
  } else {
    Serial.println(F("Erreur : Le capteur MQ7 n'est pas correctement branché !"));
    lcd.clear();
    lcd.print(F("MQ7 mal branche"));
    while (1);
  }

  if (digitalRead(MQ2) == HIGH) {
    Serial.println(F("Le capteur MQ2 est correctement branché."));
  } else {
    Serial.println(F("Erreur : Le capteur MQ2 n'est pas correctement branché !"));
    lcd.clear();
    lcd.print(F("MQ2 mal branche"));
  }

  lcd.clear();
  lcd.setCursor(2, 0);
  lcd.print(F("Demarrage OK"));
  delay(3000);
  lcd.clear();
}

void loop() {
  mySensor.measureAirQuality();
  Serial.print(F("CO2: "));
  Serial.print(mySensor.CO2);
  Serial.print(F(" ppm\tTVOC: "));
  Serial.print(mySensor.TVOC);
  Serial.print(F(" ppb  "));

  if (mySensor.CO2 > 800 && mySensor.CO2 < 1500) {
      lcd.clear();
      digitalWrite(ledB, HIGH);
      lcd.setCursor(4, 0);
      lcd.print(F("CO2 moyen"));
      delay(3000);
  }
  if (mySensor.CO2 > 1500) {
      hc05.print(F("Attention taux TVOC et CO2 haut"));
      delay(5000);
      lcd.clear();
      digitalWrite(ledR, HIGH);
      lcd.setCursor(4, 0);
      lcd.print(F("CO2 haut"));
      lcd.setCursor(0,1);
      lcd.print(F("Taux: "));
      lcd.print(mySensor.CO2);
      lcd.print(F(" ppm"));
      jouerSon();
      delay(1000);
  }
  else
  {
    digitalWrite(ledR, LOW);
    digitalWrite(ledB, LOW);
    lcd.clear();
    lcd.setCursor(3,0);
    lcd.print(F("pas de CO2"));
    delay(1500);
  }

  //début programmme TVOC SGP30
  if(mySensor.TVOC>3767){ //Fais la même chose pour les TVOC
      hc05.print(F("Attention taux TVOC et CO2 haut")); // Ajout de "Attention: " au message envoyé
      delay(5000);
      lcd.clear();
      digitalWrite(ledR, HIGH); //Si mySensor.CO2 est supérieur à 1100ppm alors led=5V
      lcd.setCursor(3, 0);
      lcd.print(F("TVOC haut")); //Affiche dans le Serial Monitor
      lcd.setCursor(0,1);
      lcd.print(F("Taux: "));
      lcd.print(mySensor.TVOC);
      lcd.print(F(" ppb"));
      digitalWrite(ledR, HIGH);
      jouerSon(); // Fréquence de 1000 Hz, durée de 4 secondes
      delay(1500);
  }
  else
  {
    digitalWrite(ledR, LOW);
    lcd.clear();
    lcd.setCursor(3,0);
    lcd.print(F("pas de TVOC"));
    delay(1500);
  }

  //début programme MQ7
  if (digitalRead(MQ7)==LOW){
    hc05.print(F("Attention taux CO haut")); // Ajout de "Attention: " au message envoyé
    delay(5000);
    Serial.print(F("limite atteinte en CO   "));
    lcd.clear();
    lcd.setCursor(2,0);
    lcd.print(F("Taux CO haut"));
    digitalWrite(ledR, HIGH);
    jouerSon();
    delay(1000);
  }
  else{
    Serial.print(F("limite CO ok    "));
    lcd.clear();
    lcd.setCursor(3,0);
    lcd.print(F("pas de CO"));
    delay(1500);
  }

  //début programme MQ2
  if(digitalRead(MQ2)==LOW){
    hc05.print(F("Attention taux CH haut")); // Ajout de "Attention: " au message envoyé
    delay(5000);
    Serial.print(F("limite atteinte en CH   "));
    lcd.clear();
    lcd.setCursor(2,0);
    lcd.print(F("Taux CH haut"));
    digitalWrite(ledR, HIGH);
    jouerSon();
    delay(500);
  }
  else{
    Serial.print(F("limite CH ok  "));
    lcd.clear();
    lcd.setCursor(3,0);
    lcd.print(F("pas de CH"));
    delay(1500);
  }

  lcd.clear();

  Serial.print(millis()/1000); //Affiche dans le Serial Monitor le temps depuis le début de l'acquisition
  Serial.println(F("s")); //Affiche dans le Serial Monitor

  
  ledLow();
  lcd.clear();
}
void ledLow(){
  digitalWrite(ledR, LOW);
  digitalWrite(ledB, LOW);
}
